{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui-slice.js","store/cart-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","uiActions","actions","cartSlice","items","totalQuantity","changed","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","replaceCart","cartActions","store","configureStore","reducer","ui","cart","Card","props","className","classes","card","children","CartItem","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","describtion","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","ReactDOM","render","document","getElementById"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,SAAW,2BAA2B,MAAQ,wBAAwB,UAAY,4BAA4B,QAAU,4B,mBCA5MD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,QAAU,+B,gBCAhGD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,QAAU,gC,kBCAlHD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,MAAQ,4B,iBCA9DD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,6B,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,iFCCvBC,EAAUC,YAAY,CAC1BC,KAAM,KACNC,aAAc,CAAEC,eAAe,EAAOC,aAAc,MACpDC,SAAU,CACRC,OADQ,SACDC,GACLA,EAAMJ,eAAiBI,EAAMJ,eAE/BK,iBAJQ,SAISD,EAAOE,GACtBF,EAAMH,aAAe,CACnBM,OAAQD,EAAOE,QAAQD,OACvBE,MAAOH,EAAOE,QAAQC,MACtBC,QAASJ,EAAOE,QAAQE,aAMnBC,EAAYf,EAAQgB,QAClBhB,IClBTiB,EAAYhB,YAAY,CAC5BC,KAAM,OACNC,aAAc,CACZe,MAAO,GACPC,cAAe,EACfC,SAAS,GAEXd,SAAU,CACRe,cADQ,SACMb,EAAOE,GACnB,IAAMY,EAAUZ,EAAOE,QACjBW,EAAef,EAAMU,MAAMM,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAOJ,EAAQI,MACpElB,EAAMW,gBACNX,EAAMY,SAAU,EACXG,GASHA,EAAaI,WACbJ,EAAaK,YAAcN,EAAQO,OATnCrB,EAAMU,MAAMY,KAAK,CACfJ,GAAIJ,EAAQI,GACZG,MAAOP,EAAQO,MACfF,SAAU,EACVC,WAAYN,EAAQO,MACpB3B,KAAMoB,EAAQT,SAQpBkB,mBApBQ,SAoBWvB,EAAOE,GACxB,IAAMgB,EAAKhB,EAAOE,QACZW,EAAef,EAAMU,MAAMM,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAOA,KAC5DlB,EAAMW,gBACNX,EAAMY,SAAU,EACc,IAA1BG,EAAaI,SACfnB,EAAMU,MAAQV,EAAMU,MAAMc,QAAO,SAACP,GAAD,OAAUA,EAAKC,KAAOA,MAEvDH,EAAaI,WACbJ,EAAaK,WAAaL,EAAaK,WAAaL,EAAaM,QAIrEI,YAjCQ,SAiCIzB,EAAOE,GAEfF,EAAMW,cAAgBT,EAAOE,QAAQO,cACrCX,EAAMU,MAAQR,EAAOE,QAAQM,UAStBD,IACFiB,EAAcjB,EAAUD,QC1CtBmB,EARDC,YAAe,CACzBC,QAAQ,CACJC,GAAItC,EAAQqC,QACZE,KAAMtB,EAAUoB,W,uDCITG,EAVF,SAACC,GACZ,OACE,yBACEC,UAAS,UAAKC,IAAQC,KAAb,YAAqBH,EAAMC,UAAYD,EAAMC,UAAY,IADpE,SAGGD,EAAMI,Y,iCC+BEC,EAlCE,SAACL,GAChB,MAA8CA,EAAMhB,KAA5CZ,EAAR,EAAQA,MAAOc,EAAf,EAAeA,SAAUoB,EAAzB,EAAyBA,MAAOlB,EAAhC,EAAgCA,MAAOH,EAAvC,EAAuCA,GACjCsB,EAAWC,cAUjB,OACE,qBAAIP,UAAWC,IAAQlB,KAAvB,UACE,mCACE,6BAAKZ,IACL,sBAAK6B,UAAWC,IAAQd,MAAxB,cACIkB,EAAMG,QAAQ,GAAI,IACpB,uBAAMR,UAAWC,IAAQQ,UAAzB,eAAuCtB,EAAMqB,QAAQ,GAArD,kBAGJ,sBAAKR,UAAWC,IAAQS,QAAxB,UACE,sBAAKV,UAAWC,IAAQhB,SAAxB,eACI,+BAAOA,OAEX,sBAAKe,UAAWC,IAAQ3B,QAAxB,UACE,wBAAQqC,QAtBU,WACxBL,EAASd,EAAYH,mBAAmBL,KAqBlC,eACA,wBAAQ2B,QAnBO,WACrBL,EAASd,EAAYb,cAAc,CAAEK,KAAIb,QAAOgB,YAkB1C,yBCHKyB,EAvBF,SAACb,GACZ,IAAMc,EAAYC,aAAY,SAAChD,GAAD,OAAWA,EAAM+B,KAAKrB,SACpD,OACE,eAAC,EAAD,CAAMwB,UAAWC,IAAQJ,KAAzB,UACE,oDACA,6BACGgB,EAAUE,KAAI,SAACvC,GAAD,OACb,cAAC,EAAD,CAEEO,KAAM,CACJC,GAAIR,EAAMQ,GACVb,MAAOK,EAAMhB,KACbyB,SAAUT,EAAMS,SAChBoB,MAAO7B,EAAMU,WACbC,MAAOX,EAAMW,QANZX,EAAMQ,a,iBCINgC,EAdI,SAACjB,GAClB,IAAMtB,EAAgBqC,aAAY,SAAAhD,GAAK,OAAIA,EAAM+B,KAAKpB,iBAChD6B,EAAWC,cAIjB,OACE,yBAAQP,UAAWC,IAAQgB,OAAQN,QAJjB,WAClBL,EAASjC,EAAUR,WAGnB,UACE,2CACA,sBAAMmC,UAAWC,IAAQiB,MAAzB,SAAiCzC,Q,iBCMxB0C,EAfI,SAACpB,GAClB,OACE,yBAAQC,UAAWC,IAAQmB,OAA3B,UACE,2CACA,8BACE,6BACE,6BACE,cAAC,EAAD,cCEGC,EATA,SAACtB,GACd,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,+BAAOA,EAAMI,e,gBCsBJmB,EAxBK,SAACvB,GACnB,IAAQ5B,EAAkC4B,EAAlC5B,MAAOgB,EAA2BY,EAA3BZ,MAAOoC,EAAoBxB,EAApBwB,YAAavC,EAAOe,EAAPf,GAC7BsB,EAAWC,cAMjB,OACE,oBAAIP,UAAWC,IAAQlB,KAAvB,SACE,eAAC,EAAD,WACE,mCACE,6BAAKZ,IACL,sBAAK6B,UAAWC,IAAQd,MAAxB,cAAiCA,EAAMqB,QAAQ,SAEjD,4BAAIe,IACJ,qBAAKvB,UAAWC,IAAQ3B,QAAxB,SACE,wBAAQqC,QAbS,WACvBL,EAASd,EAAYb,cAAc,CAAER,QAAOgB,QAAOH,SAY7C,iC,iBCnBJwC,EAAiB,CACrB,CACExC,GAAG,KACHG,MAAM,EACNhB,MAAO,gBACPsD,YAAa,qCAEf,CACEzC,GAAI,KACJG,MAAO,GACPhB,MAAO,iBACPsD,YAAa,2CA6BFC,EAlBE,SAAC3B,GAChB,OACE,0BAASC,UAAWC,IAAQ0B,SAA5B,UACE,4DACA,6BACGH,EAAeT,KAAI,SAACa,GAAD,OACnB,cAAC,EAAD,CAEA5C,GAAM4C,EAAQ5C,GACbb,MAAOyD,EAAQzD,MACfgB,MAAOyC,EAAQzC,MACfoC,YAAaK,EAAQH,aAJfG,EAAQ5C,a,gBCZT6C,EAlBM,SAAC9B,GACpB,IAAI+B,EAAiB,GACA,UAAjB/B,EAAM9B,SACR6D,EAAiB7B,IAAQ8B,OAEN,YAAjBhC,EAAM9B,SACR6D,EAAiB7B,IAAQ+B,SAE3B,IAAMC,EAAU,UAAMH,EAAN,YAAwB7B,IAAQtC,aAAhC,MAEhB,OACE,0BAASqC,UAAWiC,EAApB,UACE,6BAAKlC,EAAM5B,QACX,4BAAI4B,EAAM3B,c,uBCNZ8D,GAAY,EAsCDC,MArCf,WACE,IAAM7B,EAAWC,cACX6B,EAAWtB,aAAY,SAAChD,GAAD,OAAWA,EAAM8B,GAAGlC,iBAC3CmC,EAAOiB,aAAY,SAAChD,GAAD,OAAWA,EAAM+B,QACpClC,EAAemD,aAAY,SAAChD,GAAD,OAAWA,EAAM8B,GAAGjC,gBAgBrD,OAdA0E,qBAAU,WACR/B,ECyCF,uCAAO,WAAOA,GAAP,iBAAAgC,EAAA,6DAGCC,EAHD,+BAAAD,EAAA,MAGa,8BAAAA,EAAA,sEACOE,MACrB,0EAFc,WACVC,EADU,QAIFC,GAJE,sBAKR,IAAIC,MAAM,4BALF,uBAQGF,EAASG,OARZ,cAQVC,EARU,yBASTA,GATS,2CAHb,uEAeoBN,IAfpB,OAeGO,EAfH,OAgBHxC,EACEd,EAAYD,YAAY,CACtBf,MAAOsE,EAAStE,OAAS,GACzBC,cAAeqE,EAASrE,iBAnBzB,gDAuBH6B,EACEjC,EAAUN,iBAAiB,CACzBE,OAAQ,QACRE,MAAO,QACPC,QAAS,iCA3BV,yDAAP,yDDxCG,CAACkC,IAEJ+B,qBAAU,WACJH,EACFA,GAAY,EAGVrC,EAAKnB,SACP4B,ECtBsB,SAACT,GAK3B,8CAAO,WAAOS,GAAP,eAAAgC,EAAA,6DAGLhC,EACEjC,EAAUN,iBAAiB,CACzBE,OAAQ,UACRE,MAAO,aACPC,QAAS,wBAGP2E,EAVD,+BAAAT,EAAA,MAUe,sBAAAA,EAAA,sEACKE,MACrB,yEACA,CACEQ,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACnB3E,MAAOqB,EAAKrB,MACZC,cAAeoB,EAAKpB,kBAPR,iBAWJiE,GAXI,sBAYV,IAAIC,MAAM,8BAZA,2CAVf,uEA0BGI,IA1BH,OA2BHzC,EACEjC,EAAUN,iBAAiB,CACzBE,OAAQ,UACRE,MAAO,UACPC,QAAS,iCA/BV,gDAmCHkC,EACEjC,EAAUN,iBAAiB,CACzBE,OAAQ,QACRE,MAAO,QACPC,QAAS,gCAvCV,yDAAP,sDDiBagF,CAAavD,MAEvB,CAACA,EAAMS,IAGR,eAAC,WAAD,WACG3C,GACC,cAAC,EAAD,CACEM,OAAQN,EAAaM,OACrBE,MAAOR,EAAaQ,MACpBC,QAAST,EAAaS,UAG1B,eAAC,EAAD,WACGgE,GAAY,cAAC,EAAD,IACb,cAAC,EAAD,CAAU5D,MAAOqB,WElCzBwD,IAASC,OACP,cAAC,IAAD,CAAU7D,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF8D,SAASC,eAAe,W","file":"static/js/main.5d6d2f92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__Lgq_C\",\"details\":\"CartItem_details__1TLfX\",\"quantity\":\"CartItem_quantity__3U5Cj\",\"price\":\"CartItem_price__tIdsh\",\"itemprice\":\"CartItem_itemprice__2RqcW\",\"actions\":\"CartItem_actions__UifFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2INMe\",\"price\":\"ProductItem_price__1FQYA\",\"actions\":\"ProductItem_actions__3y94O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3TG5t\",\"error\":\"Notification_error__89x9j\",\"success\":\"Notification_success__GG-WJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__2_duR\",\"badge\":\"CartButton_badge__vOg-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__17WVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__2z7iW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__A406t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1WEeX\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: { cartIsVisible: false, notification: null },\r\n  reducers: {\r\n    toggle(state) {\r\n      state.cartIsVisible = !state.cartIsVisible;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\nexport default uiSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      state.changed = true\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice += newItem.price;\r\n      }\r\n    },\r\n\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      state.changed = true\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n\r\n    replaceCart(state, action)\r\n    {\r\n        state.totalQuantity = action.payload.totalQuantity\r\n        state.items = action.payload.items\r\n    }\r\n  },\r\n});\r\n\r\n\r\n\r\n \r\n \r\nexport default cartSlice;\r\nexport const cartActions = cartSlice.actions;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport uiSlice from './ui-slice'\r\nimport cartSlice from \"./cart-slice\";\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        ui: uiSlice.reducer,\r\n        cart: cartSlice.reducer\r\n    }\r\n})\r\n\r\n\r\nexport default store","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst CartItem = (props) => {\n  const { title, quantity, total, price, id } = props.item;\n  const dispatch = useDispatch();\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  const addItemHandler = () => {\n    dispatch(cartActions.addItemToCart({ id, title, price }));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport { useSelector } from \"react-redux\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((items) => (\n          <CartItem\n          key={items.id}\n            item={{\n              id: items.id,\n              title: items.name,\n              quantity: items.quantity,\n              total: items.totalPrice,\n              price: items.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from './CartButton.module.css';\nimport { uiActions } from '../../store/ui-slice';\nimport { useDispatch, useSelector } from 'react-redux';\nconst CartButton = (props) => {\n  const totalQuantity = useSelector(state => state.cart.totalQuantity)\n  const dispatch = useDispatch()\n  const toggleHandler=()=>{\n    dispatch(uiActions.toggle())\n  }\n  return (\n    <button className={classes.button} onClick={toggleHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst ProductItem = (props) => {\n  const { title, price, description, id } = props;\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({ title, price, id }));\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCTS = [\n  {\n    id:'p1',\n    price:6,\n    title: 'My first book',\n    describtion: 'The first novel i\\'ve ever written'\n  },\n  {\n    id: 'p2',\n    price: 90,\n    title: 'My second book',\n    describtion: 'This book is about monsters and wolves'\n  },\n  // {\n  //   id: 'p3',\n  //   price: 45,\n  //   title: 'My third book',\n  //   describtion: 'This book is about love and heartbreak'\n  // },\n\n]\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product)=>(         \n         <ProductItem\n         key = {product.id }\n         id = {product.id}\n          title={product.title}\n          price={product.price}\n          description={product.describtion}\n        />))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n  if (props.status === \"error\") {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === \"success\") {\r\n    specialClasses = classes.success;\r\n  }\r\n  const cssClasses = `${specialClasses} ${classes.notification}  `;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, Fragment } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\n// import { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { sendCartData, fetchCartData } from \"./store/cart-actions\";\n\nlet isInitial = true;\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products items={cart} />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n\n// useEffect(() => {\n// const sendCartData = async () => {\n// dispatch(\n//   uiActions.showNotification({\n//     status: \"pending\",\n//     title: \"sending...\",\n//     message: \"sending cart data!\",\n//   })\n// );\n//   const response = await fetch(\n//     \"https://redux-test-project-8d041-default-rtdb.firebaseio.com/cart.json\",\n//     { method: \"PUT\", body: JSON.stringify(cart) }\n//   );\n//   if (!response.ok) {\n//     throw new Error(\"Error in sending cart data\");\n//   }\n//   dispatch(\n//     uiActions.showNotification({\n//       status: \"success\",\n//       title: \"success\",\n//       message: \"sent cart data successfuly!\",\n//     })\n//   );\n// };\n\n// if(isInitial)\n// {\n//   isInitial = false\n//   return\n// }\n\n// sendCartData().catch((error) => {\n//   dispatch(\n//     uiActions.showNotification({\n//       status: \"error\",\n//       title: \"Error\",\n//       message: \"Error in sending cart data\",\n//     })\n//   );\n// });\n// },[]);\n","import  {uiActions}  from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n// import { useDispatch } from \"react-redux\";\r\n\r\nexport const sendCartData = (cart) => {\r\n    // const dispatch = useDispatch()\r\n    // console.log('helloooooooooooooooo' )\r\n\r\n\r\n  return async (dispatch) => {\r\n    // const dispatch = useDispatch()\r\n    // console.log('helloooooooooooooooo' )\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"sending...\",\r\n        message: \"sending cart data!\",\r\n      })\r\n    );\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-test-project-8d041-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Error in sending cart data\");\r\n      }\r\n    };\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          title: \"success\",\r\n          message: \"sent cart data successfuly!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Error in sending cart data\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCartData = () => {\r\n    // console.log('helloooooooooooooooo' )\r\n\r\n  return async (dispatch) => {\r\n    // console.log('helloooooooooooooooo' )\r\n\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-test-project-8d041-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Couldn't fetch cart data\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n    try {\r\n      const cartData = await fetchData();\r\n      dispatch(\r\n        cartActions.replaceCart({\r\n          items: cartData.items || [],\r\n          totalQuantity: cartData.totalQuantity,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Error in fetching cart data\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}